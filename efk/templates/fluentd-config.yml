apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
data:
  fluentd.conf: |

    # Ignore fluentd own events
    <match fluent.**>
      @type null
    </match>

    # HTTP input for the liveness and readiness probes
    <source>
      @type http
      port 9880
    </source>

    # Throw the healthcheck to the standard output instead of forwarding it
    <match fluentd.healthcheck>
      @type stdout
    </match>

    # Gather the logs from taskit containers running in the cluster
    <source>
      @id fluentd-containers.log
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/containers.log.pos
      tag kubernetes.taskit.*
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<k8s-timestamp>.+) (?<stream>stdout|stderr) [^ ]* \[(?<time>[^\]]+)\] (?<severity>[^\s]+) in (?<module>[^\:]+): (?<message>.+)$/
        time_format %Y-%m-%d %H:%M:%S,%L
      </parse>
    </source>

    # Parse HTTP messages
    <filter kubernetes.taskit.**>
      @id filter_parser
      @type parser
      key_name message
      reserve_time true
      reserve_data true
      remove_key_name_field true
      <parse>
        @type regexp
        expression /^\"(?<method>[A-Z]+) (?<path>[^ ]+) (?<protocol>[^ ]+)\" -- (?<status_code>\d+)$/
      </parse>
    </filter>

    # Send to elasticsearch
    <match **>
      @id elasticsearch
      @type elasticsearch
      @log_level info
      include_tag_key true
      host {{ include "elasticsearch.service.name" .Subcharts.elasticsearch }}
      port {{ include "elasticsearch.service.ports.restAPI" .Subcharts.elasticsearch }}
      path ""
      scheme http
      ssl_verify true
      ssl_version TLSv1_2
      type_name _doc
      logstash_format true
      logstash_prefix logstash
      reconnect_on_error true
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
    </match>
